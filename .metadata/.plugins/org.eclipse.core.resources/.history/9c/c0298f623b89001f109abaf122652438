package pe.com.cibertec.LP2_T2_RamirezEsparronMauricio.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import jakarta.persistence.EntityNotFoundException;
import pe.com.cibertec.LP2_T2_RamirezEsparronMauricio.model.entity.AreaEntity;
import pe.com.cibertec.LP2_T2_RamirezEsparronMauricio.repository.AreaRepository; // Asegúrate de tener un repositorio para manejar las operaciones de la base de datos
import pe.com.cibertec.LP2_T2_RamirezEsparronMauricio.service.AreaService;

import java.util.List;

@Service
public class AreaServiceImpl implements AreaService {

    @Autowired
    private AreaRepository areaRepository; 

    @Override
    public List<AreaEntity> buscarAreas() {
        return areaRepository.findAll(); 
    }

    @Override
    public void crearArea(AreaEntity area) {
        areaRepository.save(area);
    }

    @Override
    public AreaEntity buscarAreaPorId(Integer id) {
    	return areaRepository.findById(id).get();
         }

  

    @Override
    public void actualizarArea(int id, AreaEntity area) {
        // Verifica si el área existe, luego actualiza
        AreaEntity areaExistente = areaRepository.findById(id).orElseThrow(() -> new EntityNotFoundException("Área no encontrada"));
        areaExistente.setNombreArea(area.getNombreArea()); // Actualiza los campos necesarios
        areaRepository.save(areaExistente); // Guarda el área actualizada
    }

    
    @Override
    public void eliminarArea(Integer id) {// TODO Auto-generated method stub
		AreaEntity usuarioEncontrado = buscarAreaPorId(id);
		if(usuarioEncontrado == null) {
			throw new RuntimeException("Usuario no encontrado");
		}
		areaRepository.delete(usuarioEncontrado);
    }
}
